@charset "UTF-8";
/*
  Voici quelques brefs exercices pour vous donner de l'experience supplementaire en SCSS, et plus particulierement en refactorant du CSS classique en SCSS.

  Vous pouvez verifier votre SCSS en le placant dans Sassmeister, et voir si le CSS compil  correspond au code de depart :
  http://www.sassmeister.com/

  La documentation Sass est une excellente ressource et peut etre trouvee ici : http://sass-lang.com/documentation/
*/
a {
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}

/*
	A votre tour!
	 *Ecrire le code CSS suivant en utilisant un mixin SCSS:
   */
.box-square {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  -ms-border-radius: 0;
  border-radius: 0;
}

.box-rounded {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

/*
	 *Ecrire les regles suivantes en utilisant la syntaxe d'imbrication de SCSS:
   */
nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

/*
	 *Ecrire le code CSS suivant en utilisant le mot-cle @extends de SCSS:
   */
.warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

/*
	*Écrivez le CSS suivant en utilisant une directive SCSS "each" et une "map" (similaire à un objet en JS)
	*/
h1 {
  color: darkorange;
}

h2 {
  color: royalblue;
}

h3 {
  color: springgreen;
}

/*
	*Écrire le CSS suivant en utilisant le mot-cle @extends de SCSS et des variables représentant les valeurs de couleurs:
*/
span.facebook, a.twitter {
  min-width: 100px;
  padding: 1em;
  border-radius: 1em;
  color: #fff;
  background: var(--social-bg-color);
}

a.twitter {
  --social-bg-color: #55acee;
}

span.facebook {
  --social-bg-color: #3b5998;
}

/*# sourceMappingURL=syntax.css.map */
